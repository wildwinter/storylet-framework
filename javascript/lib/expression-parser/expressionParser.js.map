{"version":3,"file":"expressionParser.js","sources":["../src/writer.js","../src/expression.js","../src/parser.js"],"sourcesContent":["// This file is part of an MIT-licensed project: see LICENSE file or README.md for details.\n// Copyright (c) 2025 Ian Thomas\n\nexport const STRING_FORMAT = Object.freeze({\n    SINGLEQUOTE: 0,\n    ESCAPED_SINGLEQUOTE: 1,\n    DOUBLEQUOTE: 2,\n    ESCAPED_DOUBLEQUOTE: 3,\n  });\n  \nlet _stringFormat = STRING_FORMAT.SINGLEQUOTE;\n\nexport const Writer = {\n    get StringFormat() {\n        return _stringFormat;\n    },\n    set StringFormat(value) {\n        _stringFormat = value;\n    }\n};","/*\n * This file is part of an MIT-licensed project: see LICENSE file or README.md for details.\n * Copyright (c) 2025 Ian Thomas\n */\n\nimport {\n  STRING_FORMAT,\n  Writer\n} from \"./writer.js\";\n\nexport class ExpressionNode {\n  constructor(name, precedence) {\n    if (new.target === ExpressionNode) {\n      throw new TypeError(\"Cannot instantiate abstract class ExpressionNode directly\");\n    }\n    this._name = name;\n    this._precedence = precedence;\n  }\n\n  evaluate(context, dump_eval) {\n    throw new Error(\"Abstract method 'evaluate' not implemented\");\n  }\n\n  dump_structure(indent = 0) {\n    throw new Error(\"Abstract method 'dump_structure' not implemented\");\n  }\n\n  write() {\n    throw new Error(\"Abstract method 'write' not implemented\");\n  }\n}\n\nexport class BinaryOp extends ExpressionNode {\n  constructor(name, left, op, right, precedence) {\n    super(name, precedence);\n    this._left = left;\n    this._op = op;\n    this._right = right;\n  }\n\n  evaluate(context, dump_eval) {\n    const left_val = this._left.evaluate(context, dump_eval);\n\n    const [shortCircuit, shortCircuitResult] = this._short_circuit(left_val);\n    if (shortCircuit) {\n      if (dump_eval) {\n        dump_eval.push(`Evaluated: ${_format_value(left_val)} ${this._op} (ignore) = ${_format_value(shortCircuitResult)}`);\n      }\n      return shortCircuitResult;\n    }\n\n    const right_val = this._right.evaluate(context, dump_eval);\n    const result = this._do_eval(left_val, right_val);\n\n    if (dump_eval) {\n      dump_eval.push(`Evaluated: ${_format_value(left_val)} ${this._op} ${_format_value(right_val)} = ${_format_value(result)}`);\n    }\n    return result;\n  }\n\n  _do_eval(left_val, right_val) {\n    throw new Error(\"Abstract method '_do_eval' not implemented\");\n  }\n\n  _short_circuit(left_val) {\n    // By default, do not short-circuit.\n    return [false, null];\n  }\n\n  dump_structure(indent = 0) {\n    let out = \"  \".repeat(indent) + `${this._name}\\n`;\n    out += this._left.dump_structure(indent + 1);\n    out += this._right.dump_structure(indent + 1);\n    return out;\n  }\n\n  write() {\n    let left_str = this._left.write();\n    let right_str = this._right.write();\n\n    if (this._left._precedence < this._precedence) {\n      left_str = `(${left_str})`;\n    }\n    if (this._right._precedence < this._precedence) {\n      right_str = `(${right_str})`;\n    }\n    return `${left_str} ${this._op} ${right_str}`;\n  }\n}\n\nexport class OpOr extends BinaryOp {\n  constructor(left, right) {\n    super(\"Or\", left, \"or\", right, 40);\n  }\n  _short_circuit(left_val) {\n    const result = _make_bool(left_val);\n    if (result)\n      return [true, true];\n    return [false, null];\n  }\n  _do_eval(left_val, right_val) {\n    return _make_bool(left_val) || _make_bool(right_val);\n  }\n}\n\nexport class OpAnd extends BinaryOp {\n  constructor(left, right) {\n    super(\"And\", left, \"and\", right, 50);\n  }\n  _short_circuit(left_val) {\n    const result = _make_bool(left_val);\n    if (!result)\n      return [true, false];\n    return [false, null];\n  }\n  _do_eval(left_val, right_val) {\n    return _make_bool(left_val) && _make_bool(right_val);\n  }\n}\n\nexport class OpEquals extends BinaryOp {\n  constructor(left, right) {\n    super(\"Equals\", left, \"==\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    right_val = _make_type_match(left_val, right_val);\n    return left_val === right_val;\n  }\n}\n\nexport class OpNotEquals extends BinaryOp {\n  constructor(left, right) {\n    super(\"NotEquals\", left, \"!=\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    right_val = _make_type_match(left_val, right_val);\n    return left_val !== right_val;\n  }\n}\n\nexport class OpPlus extends BinaryOp {\n  constructor(left, right) {\n    super(\"Plus\", left, \"+\", right, 70);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) + _make_numeric(right_val);\n  }\n}\n\nexport class OpMinus extends BinaryOp {\n  constructor(left, right) {\n    super(\"Minus\", left, \"-\", right, 70);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) - _make_numeric(right_val);\n  }\n}\n\nexport class OpDivide extends BinaryOp {\n  constructor(left, right) {\n    super(\"Divide\", left, \"/\", right, 85);\n  }\n  _do_eval(left_val, right_val) {\n    right_val = _make_numeric(right_val);\n    if (right_val === 0) {\n      throw new Error(\"Division by zero.\");\n    }\n    return _make_numeric(left_val) / right_val;\n  }\n}\n\nexport class OpMultiply extends BinaryOp {\n  constructor(left, right) {\n    super(\"Multiply\", left, \"*\", right, 80);\n  }\n  _short_circuit(left_val) {\n    const result = _make_numeric(left_val);\n    if (result==0)\n      return [true, 0];\n    return [false, null];\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) * _make_numeric(right_val);\n  }\n}\n\nexport class OpGreaterThan extends BinaryOp {\n  constructor(left, right) {\n    super(\"GreaterThan\", left, \">\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) > _make_numeric(right_val);\n  }\n}\n\nexport class OpLessThan extends BinaryOp {\n  constructor(left, right) {\n    super(\"LessThan\", left, \"<\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) < _make_numeric(right_val);\n  }\n}\n\nexport class OpGreaterThanEquals extends BinaryOp {\n  constructor(left, right) {\n    super(\"GreaterThanEquals\", left, \">=\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) >= _make_numeric(right_val);\n  }\n}\n\nexport class OpLessThanEquals extends BinaryOp {\n  constructor(left, right) {\n    super(\"LessThanEquals\", left, \"<=\", right, 60);\n  }\n  _do_eval(left_val, right_val) {\n    return _make_numeric(left_val) <= _make_numeric(right_val);\n  }\n}\n\nexport class UnaryOp extends ExpressionNode {\n  constructor(name, op, operand, precedence) {\n    super(name, precedence);\n    this._operand = operand;\n    this._op = op;\n  }\n\n  evaluate(context, dump_eval) {\n    const val = this._operand.evaluate(context, dump_eval);\n    const result = this._do_eval(val);\n    if (dump_eval) {\n      dump_eval.push(`Evaluated: ${this._op} ${_format_value(val)} = ${_format_value(result)}`);\n    }\n    return result;\n  }\n\n  _do_eval(val) {\n    throw new Error(\"Abstract method '_do_eval' not implemented\");\n  }\n\n  dump_structure(indent = 0) {\n    let out = \"  \".repeat(indent) + `${this._name}\\n`;\n    out += this._operand.dump_structure(indent + 1);\n    return out;\n  }\n\n  write() {\n    let operand_str = this._operand.write();\n    if (this._operand._precedence < this._precedence) {\n      operand_str = `(${operand_str})`;\n    }\n    return `${this._op} ${operand_str}`;\n  }\n}\n\nexport class OpNegative extends UnaryOp {\n  constructor(operand) {\n    super(\"Negative\", \"-\", operand, 90);\n  }\n  _do_eval(val) {\n    return -_make_numeric(val);\n  }\n}\n\nexport class OpNot extends UnaryOp {\n  constructor(operand) {\n    super(\"Not\", \"not\", operand, 90);\n  }\n  _do_eval(val) {\n    return !_make_bool(val);\n  }\n}\n\nexport class LiteralBoolean extends ExpressionNode {\n  constructor(value) {\n    super(\"Boolean\", 100);\n    this._value = value;\n  }\n  evaluate(context, dump_eval) {\n    if (dump_eval) {\n      dump_eval.push(`Boolean: ${_format_value(this._value)}`);\n    }\n    return this._value;\n  }\n  dump_structure(indent = 0) {\n    return \"  \".repeat(indent) + `Boolean(${_format_value(this._value)})\\n`;\n  }\n  write() {\n    return _format_value(this._value);\n  }\n}\n\nexport class LiteralNumber extends ExpressionNode {\n  constructor(value) {\n    super(\"Number\", 100);\n    // Assuming value is provided as a string\n    this._value = parseFloat(value);\n  }\n  evaluate(context, dump_eval) {\n    if (dump_eval) {\n      dump_eval.push(`Number: ${this._value}`);\n    }\n    return this._value;\n  }\n  dump_structure(indent = 0) {\n    return \"  \".repeat(indent) + `Number(${this._value})\\n`;\n  }\n  write() {\n    return `${this._value}`;\n  }\n}\n\nexport class LiteralString extends ExpressionNode {\n  constructor(value) {\n    super(\"String\", 100);\n    this._value = value;\n  }\n  evaluate(context, dump_eval) {\n    if (dump_eval) {\n      dump_eval.push(`String: ${_format_string(this._value)}`);\n    }\n    return this._value;\n  }\n  dump_structure(indent = 0) {\n    return \"  \".repeat(indent) + `String(${_format_string(this._value)})\\n`;\n  }\n  write() {\n    return _format_string(this._value);\n  }\n}\n\nexport class Variable extends ExpressionNode {\n  constructor(name) {\n    super(\"Variable\", 100);\n    this._name = name;\n  }\n  evaluate(context, dump_eval) {\n    const value = context[this._name];\n    if (value === undefined) {\n      throw new Error(`Variable '${this._name}' not found in context.`);\n    }\n    if (typeof value !== \"number\" && typeof value !== \"boolean\" && typeof value !== \"string\") {\n      throw new TypeError(`Variable '${this._name}' must return bool, string, or numeric.`);\n    }\n    if (dump_eval) {\n      dump_eval.push(`Fetching variable: ${this._name} -> ${_format_value(value)}`);\n    }\n    return value;\n  }\n  dump_structure(indent = 0) {\n    return \"  \".repeat(indent) + `Variable(${this._name})\\n`;\n  }\n  write() {\n    return this._name;\n  }\n}\n\nexport class FunctionCall extends ExpressionNode {\n  constructor(func_name, args = []) {\n    super(\"FunctionCall\", 100);\n    this._func_name = func_name;\n    this._args = args;\n  }\n  evaluate(context, dump_eval) {\n    const func = context[this._func_name];\n    if (func === undefined) {\n      throw new Error(`Function '${this._func_name}' not found in context.`);\n    }\n    const arg_values = this._args.map(arg => arg.evaluate(context, dump_eval));\n\n    // Check function arity using func.length\n    if (arg_values.length !== func.length) {\n      const formattedArgs = arg_values.map(val => _format_value(val)).join(\", \");\n      throw new Error(`Function '${this._func_name}' does not support the provided arguments (${formattedArgs}).`);\n    }\n\n    const result = func(...arg_values);\n\n    if (typeof result !== \"number\" && typeof result !== \"boolean\" && typeof result !== \"string\") {\n      throw new TypeError(`Function '${this._func_name}' must return bool, string, or numeric.`);\n    }\n    if (dump_eval) {\n      const formattedArgs = arg_values.map(val => _format_value(val)).join(\", \");\n      dump_eval.push(`Called function: ${this._func_name}(${formattedArgs}) = ${_format_value(result)}`);\n    }\n    return result;\n  }\n  dump_structure(indent = 0) {\n    let out = \"  \".repeat(indent) + `FunctionCall(${this._func_name})\\n`;\n    for (const arg of this._args) {\n      out += arg.dump_structure(indent + 1);\n    }\n    return out;\n  }\n  write() {\n    const written_args = this._args.map(arg => arg.write());\n    return `${this._func_name}(${written_args.join(\", \")})`;\n  }\n}\n\nfunction _make_bool(val) {\n  if (typeof val === \"boolean\") {\n    return val;\n  }\n  if (typeof val === \"number\") {\n    return val !== 0;\n  }\n  if (typeof val === \"string\") {\n    return val.toLowerCase() === \"true\" || val === \"1\";\n  }\n  throw new TypeError(`Type mismatch: Expecting bool, but got '${val}'`);\n}\n\nfunction _make_str(val) {\n  if (typeof val === \"string\") {\n    return val;\n  }\n  if (typeof val === \"boolean\") {\n    return val ? \"true\" : \"false\";\n  }\n  if (typeof val === \"number\") {\n    return val.toString();\n  }\n  throw new TypeError(`Type mismatch: Expecting string but got '${val}'`);\n}\n\nfunction _make_numeric(val) {\n  if (typeof val === \"boolean\") {\n    return val ? 1 : 0;\n  }\n  if (typeof val === \"number\") {\n    return val;\n  }\n  if (typeof val === \"string\") {\n    const numericRegex = /^-?\\d+(\\.\\d+)?$/;\n    if (numericRegex.test(val)) {\n      return parseFloat(val);\n    }\n  }\n  throw new TypeError(`Type mismatch: Expecting number but got '${val}'`);\n}\n\nfunction _make_type_match(left_val, right_val) {\n  if (typeof left_val === \"boolean\") {\n    return _make_bool(right_val);\n  }\n  if (typeof left_val === \"number\") {\n    return _make_numeric(right_val);\n  }\n  if (typeof left_val === \"string\") {\n    return _make_str(right_val);\n  }\n  throw new TypeError(`Type mismatch: unrecognised type for '${left_val}'`);\n}\n\nfunction _format_string(val) {\n  switch (Writer.StringFormat) {\n    case STRING_FORMAT.SINGLEQUOTE:\n      return `'${val}'`;\n    case STRING_FORMAT.ESCAPED_SINGLEQUOTE:\n      return `\\\\'${val}\\\\'`;\n    case STRING_FORMAT.ESCAPED_DOUBLEQUOTE:\n      return `\\\\\"${val}\\\\\"`;\n    case STRING_FORMAT.DOUBLEQUOTE:\n    default:\n      return `\"${val}\"`;\n  }\n}\n\nfunction _format_value(val) {\n  if (typeof val === \"string\") {\n    return _format_string(val);\n  }\n  return val.toString();\n}","// This file is part of an MIT-licensed project: see LICENSE file or README.md for details.\n// Copyright (c) 2025 Ian Thomas\n\nimport {\n    ExpressionNode,\n    LiteralBoolean,\n    LiteralNumber,\n    LiteralString,\n    OpAnd,\n    OpDivide,\n    OpEquals,\n    OpGreaterThan,\n    OpGreaterThanEquals,\n    OpLessThan,\n    OpLessThanEquals,\n    OpMinus,\n    OpMultiply,\n    OpNegative,\n    OpNot,\n    OpNotEquals,\n    OpOr,\n    OpPlus,\n    Variable,\n    FunctionCall,\n  } from \"./expression.js\";\n  \n  // A JavaScript regular expression for tokenizing the expression.\n  // The pattern below mirrors the Python TOKEN_REGEX from your parser.\n  // Note: The \"g\" flag (global) is used for repeated matching.\n  const TOKEN_REGEX = /\\s*(>=|<=|==|=|!=|>|<|\\(|\\)|,|and|&&|or|\\|\\||not|!|\\+|\\-|\\/|\\*|[A-Za-z_][A-Za-z0-9_]*|-?\\d+\\.\\d+|-?\\d+|\"[^\"]*\"|'[^']*'|true|false|True|False)\\s*/g;\n  \n  export class ExpressionParser {\n    constructor() {\n      this._tokens = [];\n      this._pos = 0;\n    }\n  \n    /**\n     * Parses the given expression string into an AST (ExpressionNode).\n     * @param {string} expression \n     * @returns {ExpressionNode}\n     */\n    parse(expression) {\n      this._tokens = this.tokenize(expression);\n      this._pos = 0;\n      const node = this._parse_or();\n  \n      if (this._pos < this._tokens.length) {\n        throw new SyntaxError(\n          `Unexpected token '${this._tokens[this._pos]}' at position ${this._pos}`\n        );\n      }\n      return node;\n    }\n  \n    /**\n     * Tokenizes the input expression string.\n     * @param {string} expression \n     * @returns {string[]}\n     */\n    tokenize(expression) {\n        const matches = expression.matchAll(TOKEN_REGEX);\n        const tokens = [];\n        for (const match of matches) {\n          // match[1] contains the captured token (without surrounding whitespace)\n          if (match[1]) {\n            tokens.push(match[1]);\n          }\n        }\n\n        if (tokens.length === 0) {\n          throw new SyntaxError(`No tokens were recognized in expression: '${expression}'`);\n        }\n        return tokens;\n      }\n\n    _parse_or() {\n      let node = this._parse_and();\n      while (this._match(\"or\") || this._match(\"||\")) {\n        node = new OpOr(node, this._parse_and());\n      }\n      return node;\n    }\n  \n    _parse_and() {\n      let node = this._parse_binary_op();\n      while (this._match(\"and\") || this._match(\"&&\")) {\n        node = new OpAnd(node, this._parse_binary_op());\n      }\n      return node;\n    }\n  \n    _parse_math_add_sub() {\n      let node = this._parse_math_mul_div();\n      while (this._match(\"+\", \"-\")) {\n        const op = this._previous() || \"\";\n        if (op === \"+\") {\n          node = new OpPlus(node, this._parse_math_mul_div());\n        } else {\n          node = new OpMinus(node, this._parse_math_mul_div());\n        }\n      }\n      return node;\n    }\n  \n    _parse_math_mul_div() {\n      let node = this._parse_unary_op();\n      while (this._match(\"*\", \"/\")) {\n        const op = this._previous() || \"\";\n        if (op === \"*\") {\n          node = new OpMultiply(node, this._parse_unary_op());\n        } else {\n          node = new OpDivide(node, this._parse_unary_op());\n        }\n      }\n      return node;\n    }\n  \n    _parse_binary_op() {\n      let node = this._parse_math_add_sub();\n      while (this._match(\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\", \"=\")) {\n        const op = this._previous() || \"\";\n        if (op === \"=\" || op === \"==\") {\n          node = new OpEquals(node, this._parse_math_add_sub());\n        } else if (op === \"!=\") {\n          node = new OpNotEquals(node, this._parse_math_add_sub());\n        } else if (op === \">\") {\n          node = new OpGreaterThan(node, this._parse_math_add_sub());\n        } else if (op === \"<\") {\n          node = new OpLessThan(node, this._parse_math_add_sub());\n        } else if (op === \">=\") {\n          node = new OpGreaterThanEquals(node, this._parse_math_add_sub());\n        } else if (op === \"<=\") {\n          node = new OpLessThanEquals(node, this._parse_math_add_sub());\n        }\n      }\n      return node;\n    }\n  \n    _parse_unary_op() {\n      if (this._match(\"not\") || this._match(\"!\")) {\n        return new OpNot(this._parse_unary_op());\n      } else if (this._match(\"-\")) {\n        return new OpNegative(this._parse_unary_op());\n      }\n      return this._parse_term();\n    }\n  \n    _parse_string_literal() {\n      const stringVal = this._peek();\n      if (\n        stringVal &&\n        ((stringVal.startsWith('\"') && stringVal.endsWith('\"')) ||\n          (stringVal.startsWith(\"'\") && stringVal.endsWith(\"'\")))\n      ) {\n        this._advance();\n        return new LiteralString(stringVal.slice(1, -1));\n      }\n      return null;\n    }\n  \n    _parse_term() {\n      if (this._match(\"(\")) {\n        const node = this._parse_or();\n        this._consume(\")\");\n        return node;\n      } else if (this._match(\"true\") || this._match(\"True\")) {\n        return new LiteralBoolean(true);\n      } else if (this._match(\"false\") || this._match(\"False\")) {\n        return new LiteralBoolean(false);\n      } else if (/^-?\\d+(\\.\\d+)?$/.test(this._peek() || \"\")) {\n        return new LiteralNumber(this._advance() || \"\");\n      }\n  \n      const stringLiteral = this._parse_string_literal();\n      if (stringLiteral !== null) {\n        return stringLiteral;\n      }\n  \n      const identifier = this._match_identifier();\n      if (identifier) {\n        if (this._match(\"(\")) {\n          const args = [];\n          if (!this._match(\")\")) {\n            args.push(this._parse_or());\n            while (this._match(\",\")) {\n              args.push(this._parse_or());\n            }\n            this._consume(\")\");\n          }\n          return new FunctionCall(identifier, args);\n        }\n        return new Variable(identifier);\n      }\n      throw new SyntaxError(`Unexpected token: ${this._peek()}`);\n    }\n  \n    _match(...expectedTokens) {\n      if (this._pos < this._tokens.length && expectedTokens.includes(this._tokens[this._pos])) {\n        this._pos++;\n        return true;\n      }\n      return false;\n    }\n  \n    _consume(expectedToken) {\n      if (this._match(expectedToken)) {\n        return;\n      }\n      if (this._pos >= this._tokens.length) {\n        throw new SyntaxError(`Expected '${expectedToken}' but expression ended.`);\n      }\n      throw new SyntaxError(`Expected '${expectedToken}' but found '${this._peek()}'`);\n    }\n  \n    _peek() {\n      return this._pos < this._tokens.length ? this._tokens[this._pos] : null;\n    }\n  \n    _previous() {\n      return this._pos > 0 ? this._tokens[this._pos - 1] : null;\n    }\n  \n    _advance() {\n      if (this._pos < this._tokens.length) {\n        this._pos++;\n        return this._tokens[this._pos - 1];\n      }\n      return null;\n    }\n  \n    _expect(expectedToken) {\n      const token = this._advance();\n      if (token !== expectedToken) {\n        throw new SyntaxError(`Expected '${expectedToken}', but found '${token}'`);\n      }\n      return token;\n    }\n  \n    _match_identifier() {\n      if (this._pos < this._tokens.length && /^[A-Za-z_][A-Za-z0-9_]*$/.test(this._tokens[this._pos])) {\n        const token = this._tokens[this._pos];\n        this._pos++;\n        return token;\n      }\n      return null;\n    }\n  }"],"names":[],"mappings":"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"}